"use strict";(self.webpackChunk_invoicebox_ui=self.webpackChunk_invoicebox_ui||[]).push([[344],{"./src/palette/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Docs:()=>Docs,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/common/Skeleton/index.tsx"),_provider__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/palette/provider.tsx"),_components_common_Typography__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/common/Typography/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js"),Example=function(_ref){var children=_ref.children;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{style:{width:100,height:40},children:children})};let __WEBPACK_DEFAULT_EXPORT__={title:"palette/Palette"};var Docs={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_components_common_Typography__WEBPACK_IMPORTED_MODULE_2__.O,{variant:"bodyL",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h1",{children:"Система цветов"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h3",{children:"Поведение по умолчанию"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("p",{children:"Можно использовать компоненты без определения цветов, тогда будут использованы цвета по умолчанию."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"<Skeleton />"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Example,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__.W,{})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h3",{children:"Переопределение цветов на уровне вызова компонента"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("p",{children:["Можно переопределить цвета на уровне вызова компонента, для этого используйте свойство"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"palette"}),"."]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"<Skeleton palette={{ bg: '#c9c', flicker: '#5a5' }} />"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Example,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__.W,{palette:{bg:"#c9c",flicker:"#5a5"}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("i",{children:["Если у компонента нет свойства ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"palette"}),", а вам оно требуется, создайте"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("a",{href:"https://github.com/InvoiceBox/invoicebox-ui/issues",children:"issue"}),". Или добавьте самостоятельно и откройте pull request, используя в качестве примера, компонент"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"Skeleton"}),"."]})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h3",{children:"Переопределение цветов конкретного компонента"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("p",{children:["Можно переопределить поведение по умолчанию конкретного компонента. Для этого используйте"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"PaletteProvider"})," и его свойство соответствующее компоненту."]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("code",{children:["<PaletteProvider skeleton={{ bg: '#39c', flicker: '#5cc' }}>\n","    <Skeleton />\n","</PaletteProvider>"]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Example,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_provider__WEBPACK_IMPORTED_MODULE_1__.O,{skeleton:{bg:"#39c",flicker:"#5cc"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__.W,{})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("i",{children:["Если у ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"PaletteProvider"})," нет свойства соответствующего компоненту, а вам оно требуется, создайте"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("a",{href:"https://github.com/InvoiceBox/invoicebox-ui/issues",children:"issue"}),". Или добавьте самостоятельно и откройте pull request, используя в качестве примера, компонент"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"Skeleton"}),"."]})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h3",{children:"Переопределение абстрактных цветов"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("p",{children:["Все цвета компонентов создаются из абстрактных цветов. Переопределяя абстрактные цвета, можно изменить цветовую палитру всех компонентов разом. Это может быть полезно для темирования. Для переопределения абстрактных цветов используйте"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"PaletteProvider"})," и его свойство ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"abstract"}),"."]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("code",{children:["<PaletteProvider abstract={{ neutralUsual: '#c93', neutralLight: '#cc5' }}>\n","    <Skeleton />\n","</PaletteProvider>"]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Example,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_provider__WEBPACK_IMPORTED_MODULE_1__.O,{abstract:{neutralUsual:"#c93",neutralLight:"#cc5"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__.W,{})})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h3",{children:"Приоритет цветов"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("p",{children:["Самый высокий приоритет имеют цвета на уровне вызова компонента. Затем цвета по умолчанию, назначенные при помощи ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"PaletteProvider"})," и соответствующего свойства. Затем абстрактные цвета, назначенные при помощи ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"PaletteProvider"})," и свойства"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"abstract"}),"."]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("code",{children:["<PaletteProvider abstract={{ neutralUsual: 'red' }} skeleton={{ bg: 'green' }}>\n","    <Skeleton palette={{ bg: 'blue' }}/>\n","</PaletteProvider>"]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Example,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_provider__WEBPACK_IMPORTED_MODULE_1__.O,{abstract:{neutralUsual:"red"},skeleton:{bg:"green"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__.W,{palette:{bg:"blue"}})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("code",{children:["<PaletteProvider abstract={{ neutralUsual: 'red' }} skeleton={{ bg: 'green' }}>\n","    <Skeleton />\n","</PaletteProvider>"]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Example,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_provider__WEBPACK_IMPORTED_MODULE_1__.O,{abstract:{neutralUsual:"red"},skeleton:{bg:"green"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__.W,{})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("code",{children:["<PaletteProvider abstract={{ neutralUsual: 'red' }}>\n","    <Skeleton />\n","</PaletteProvider>"]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Example,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_provider__WEBPACK_IMPORTED_MODULE_1__.O,{abstract:{neutralUsual:"red"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__.W,{})})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h3",{children:"Частичное и полное переопределение цветов"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("p",{children:"На любом уровне можно переопределить любое количество цветов."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"<Skeleton palette={{ bg: 'pink' }}/>"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Example,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__.W,{palette:{bg:"pink"}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"<Skeleton palette={{ flicker: 'brown' }}/>"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Example,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__.W,{palette:{flicker:"brown"}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"<Skeleton palette={{ bg: 'pink', flicker: 'brown' }}/>"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Example,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_common_Skeleton__WEBPACK_IMPORTED_MODULE_0__.W,{palette:{bg:"pink",flicker:"brown"}})})]})]})}};Docs.parameters={...Docs.parameters,docs:{...Docs.parameters?.docs,source:{originalSource:"{\n  render: () => <Typography variant=\"bodyL\">\n            <h1>Система цветов</h1>\n            <div>\n                <h3>Поведение по умолчанию</h3>\n                <p>\n                    Можно использовать компоненты без определения цветов, тогда будут использованы цвета по\n                    умолчанию.\n                </p>\n                <pre>\n                    <code>{'<Skeleton />'}</code>\n                </pre>\n                <Example>\n                    <Skeleton />\n                </Example>\n            </div>\n            <div>\n                <h3>Переопределение цветов на уровне вызова компонента</h3>\n                <p>\n                    Можно переопределить цвета на уровне вызова компонента, для этого используйте свойство{' '}\n                    <code>palette</code>.\n                </p>\n                <pre>\n                    <code>{\"<Skeleton palette={{ bg: '#c9c', flicker: '#5a5' }} />\"}</code>\n                </pre>\n                <Example>\n                    <Skeleton palette={{\n          bg: '#c9c',\n          flicker: '#5a5'\n        }} />\n                </Example>\n                <p>\n                    <i>\n                        Если у компонента нет свойства <code>palette</code>, а вам оно требуется, создайте{' '}\n                        <a href=\"https://github.com/InvoiceBox/invoicebox-ui/issues\">issue</a>. Или добавьте\n                        самостоятельно и откройте pull request, используя в качестве примера, компонент{' '}\n                        <code>Skeleton</code>.\n                    </i>\n                </p>\n            </div>\n            <div>\n                <h3>Переопределение цветов конкретного компонента</h3>\n                <p>\n                    Можно переопределить поведение по умолчанию конкретного компонента. Для этого используйте{' '}\n                    <code>PaletteProvider</code> и его свойство соответствующее компоненту.\n                </p>\n                <pre>\n                    <code>\n                        {`<PaletteProvider skeleton={{ bg: '#39c', flicker: '#5cc' }}>\\n`}\n                        {`    <Skeleton />\\n`}\n                        {`</PaletteProvider>`}\n                    </code>\n                </pre>\n                <Example>\n                    <PaletteProvider skeleton={{\n          bg: '#39c',\n          flicker: '#5cc'\n        }}>\n                        <Skeleton />\n                    </PaletteProvider>\n                </Example>\n                <p>\n                    <i>\n                        Если у <code>PaletteProvider</code> нет свойства соответствующего компоненту, а вам\n                        оно требуется, создайте{' '}\n                        <a href=\"https://github.com/InvoiceBox/invoicebox-ui/issues\">issue</a>. Или добавьте\n                        самостоятельно и откройте pull request, используя в качестве примера, компонент{' '}\n                        <code>Skeleton</code>.\n                    </i>\n                </p>\n            </div>\n            <div>\n                <h3>Переопределение абстрактных цветов</h3>\n                <p>\n                    Все цвета компонентов создаются из абстрактных цветов. Переопределяя абстрактные цвета,\n                    можно изменить цветовую палитру всех компонентов разом. Это может быть полезно для\n                    темирования. Для переопределения абстрактных цветов используйте{' '}\n                    <code>PaletteProvider</code> и его свойство <code>abstract</code>.\n                </p>\n                <pre>\n                    <code>\n                        {`<PaletteProvider abstract={{ neutralUsual: '#c93', neutralLight: '#cc5' }}>\\n`}\n                        {`    <Skeleton />\\n`}\n                        {`</PaletteProvider>`}\n                    </code>\n                </pre>\n                <Example>\n                    <PaletteProvider abstract={{\n          neutralUsual: '#c93',\n          neutralLight: '#cc5'\n        }}>\n                        <Skeleton />\n                    </PaletteProvider>\n                </Example>\n            </div>\n            <div>\n                <h3>Приоритет цветов</h3>\n                <p>\n                    Самый высокий приоритет имеют цвета на уровне вызова компонента. Затем цвета по умолчанию,\n                    назначенные при помощи <code>PaletteProvider</code> и соответствующего свойства. Затем\n                    абстрактные цвета, назначенные при помощи <code>PaletteProvider</code> и свойства{' '}\n                    <code>abstract</code>.\n                </p>\n                <pre>\n                    <code>\n                        {`<PaletteProvider abstract={{ neutralUsual: 'red' }} skeleton={{ bg: 'green' }}>\\n`}\n                        {`    <Skeleton palette={{ bg: 'blue' }}/>\\n`}\n                        {`</PaletteProvider>`}\n                    </code>\n                </pre>\n                <Example>\n                    <PaletteProvider abstract={{\n          neutralUsual: 'red'\n        }} skeleton={{\n          bg: 'green'\n        }}>\n                        <Skeleton palette={{\n            bg: 'blue'\n          }} />\n                    </PaletteProvider>\n                </Example>\n                <pre>\n                    <code>\n                        {`<PaletteProvider abstract={{ neutralUsual: 'red' }} skeleton={{ bg: 'green' }}>\\n`}\n                        {`    <Skeleton />\\n`}\n                        {`</PaletteProvider>`}\n                    </code>\n                </pre>\n                <Example>\n                    <PaletteProvider abstract={{\n          neutralUsual: 'red'\n        }} skeleton={{\n          bg: 'green'\n        }}>\n                        <Skeleton />\n                    </PaletteProvider>\n                </Example>\n                <pre>\n                    <code>\n                        {`<PaletteProvider abstract={{ neutralUsual: 'red' }}>\\n`}\n                        {`    <Skeleton />\\n`}\n                        {`</PaletteProvider>`}\n                    </code>\n                </pre>\n                <Example>\n                    <PaletteProvider abstract={{\n          neutralUsual: 'red'\n        }}>\n                        <Skeleton />\n                    </PaletteProvider>\n                </Example>\n            </div>\n            <div>\n                <h3>Частичное и полное переопределение цветов</h3>\n                <p>На любом уровне можно переопределить любое количество цветов.</p>\n                <pre>\n                    <code>{`<Skeleton palette={{ bg: 'pink' }}/>`}</code>\n                </pre>\n                <Example>\n                    <Skeleton palette={{\n          bg: 'pink'\n        }} />\n                </Example>\n                <pre>\n                    <code>{`<Skeleton palette={{ flicker: 'brown' }}/>`}</code>\n                </pre>\n                <Example>\n                    <Skeleton palette={{\n          flicker: 'brown'\n        }} />\n                </Example>\n                <pre>\n                    <code>{`<Skeleton palette={{ bg: 'pink', flicker: 'brown' }}/>`}</code>\n                </pre>\n                <Example>\n                    <Skeleton palette={{\n          bg: 'pink',\n          flicker: 'brown'\n        }} />\n                </Example>\n            </div>\n        </Typography>\n}",...Docs.parameters?.docs?.source}}};let __namedExportsOrder=["Docs"]}}]);